//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class TrimeshShape : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TrimeshShape(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(TrimeshShape obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~TrimeshShape() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          chrono_vehiclePINVOKE.delete_TrimeshShape(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public TrimeshShape(ChVector3d pos, string filename, ChVector3d interior_point, double scale, double radius, int matID) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_0(ChVector3d.getCPtr(pos), filename, ChVector3d.getCPtr(interior_point), scale, radius, matID), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, string filename, ChVector3d interior_point, double scale, double radius) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_1(ChVector3d.getCPtr(pos), filename, ChVector3d.getCPtr(interior_point), scale, radius), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, string filename, ChVector3d interior_point, double scale) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_2(ChVector3d.getCPtr(pos), filename, ChVector3d.getCPtr(interior_point), scale), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, string filename, ChVector3d interior_point) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_3(ChVector3d.getCPtr(pos), filename, ChVector3d.getCPtr(interior_point)), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, ChTriangleMeshConnected trimesh, ChVector3d interior_point, double radius, int matID) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_4(ChVector3d.getCPtr(pos), ChTriangleMeshConnected.getCPtr(trimesh), ChVector3d.getCPtr(interior_point), radius, matID), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, ChTriangleMeshConnected trimesh, ChVector3d interior_point, double radius) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_5(ChVector3d.getCPtr(pos), ChTriangleMeshConnected.getCPtr(trimesh), ChVector3d.getCPtr(interior_point), radius), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, ChTriangleMeshConnected trimesh, ChVector3d interior_point) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_6(ChVector3d.getCPtr(pos), ChTriangleMeshConnected.getCPtr(trimesh), ChVector3d.getCPtr(interior_point)), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, string filename, double radius, int matID) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_7(ChVector3d.getCPtr(pos), filename, radius, matID), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, string filename, double radius) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_8(ChVector3d.getCPtr(pos), filename, radius), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, ChTriangleMeshConnected trimesh, double radius, int matID) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_9(ChVector3d.getCPtr(pos), ChTriangleMeshConnected.getCPtr(trimesh), radius, matID), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public TrimeshShape(ChVector3d pos, ChTriangleMeshConnected trimesh, double radius) : this(chrono_vehiclePINVOKE.new_TrimeshShape__SWIG_10(ChVector3d.getCPtr(pos), ChTriangleMeshConnected.getCPtr(trimesh), radius), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChTriangleMeshConnected trimesh {
    set {
      chrono_vehiclePINVOKE.TrimeshShape_trimesh_set(swigCPtr, ChTriangleMeshConnected.getCPtr(value));
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = chrono_vehiclePINVOKE.TrimeshShape_trimesh_get(swigCPtr);
      ChTriangleMeshConnected ret = (cPtr == global::System.IntPtr.Zero) ? null : new ChTriangleMeshConnected(cPtr, true);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ChVector3d int_point {
    set {
      chrono_vehiclePINVOKE.TrimeshShape_int_point_set(swigCPtr, ChVector3d.getCPtr(value));
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = chrono_vehiclePINVOKE.TrimeshShape_int_point_get(swigCPtr);
      ChVector3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new ChVector3d(cPtr, false);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double radius {
    set {
      chrono_vehiclePINVOKE.TrimeshShape_radius_set(swigCPtr, value);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = chrono_vehiclePINVOKE.TrimeshShape_radius_get(swigCPtr);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ChVector3d pos {
    set {
      chrono_vehiclePINVOKE.TrimeshShape_pos_set(swigCPtr, ChVector3d.getCPtr(value));
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = chrono_vehiclePINVOKE.TrimeshShape_pos_get(swigCPtr);
      ChVector3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new ChVector3d(cPtr, false);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int matID {
    set {
      chrono_vehiclePINVOKE.TrimeshShape_matID_set(swigCPtr, value);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = chrono_vehiclePINVOKE.TrimeshShape_matID_get(swigCPtr);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
