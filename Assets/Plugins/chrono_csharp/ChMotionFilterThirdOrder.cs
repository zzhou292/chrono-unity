//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChMotionFilterThirdOrder : ChMotionFilter {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ChMotionFilterThirdOrder(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChMotionFilterThirdOrder_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChMotionFilterThirdOrder obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          chronoPINVOKE.delete_ChMotionFilterThirdOrder(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChMotionFilterThirdOrder() : this(chronoPINVOKE.new_ChMotionFilterThirdOrder__SWIG_0(), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChMotionFilterThirdOrder(double vmax, double amax, double jmax, double timestep) : this(chronoPINVOKE.new_ChMotionFilterThirdOrder__SWIG_1(vmax, amax, jmax, timestep), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Config(double vmax, double amax, double jmax, double timestep) {
    chronoPINVOKE.ChMotionFilterThirdOrder_Config(swigCPtr, vmax, amax, jmax, timestep);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Reset() {
    chronoPINVOKE.ChMotionFilterThirdOrder_Reset(swigCPtr);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public double Filter(double raw_setpos, double raw_setvel, double raw_setacc) {
    double ret = chronoPINVOKE.ChMotionFilterThirdOrder_Filter(swigCPtr, raw_setpos, raw_setvel, raw_setacc);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double GetFilteredJerk() {
    double ret = chronoPINVOKE.ChMotionFilterThirdOrder_GetFilteredJerk(swigCPtr);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
