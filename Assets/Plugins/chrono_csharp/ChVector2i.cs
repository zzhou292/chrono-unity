//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChVector2i : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ChVector2i(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChVector2i obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ChVector2i() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          chrono_vehiclePINVOKE.delete_ChVector2i(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ChVector2i() : this(chrono_vehiclePINVOKE.new_ChVector2i__SWIG_0(), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVector2i(int x, int y) : this(chrono_vehiclePINVOKE.new_ChVector2i__SWIG_1(x, y), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVector2i(int a) : this(chrono_vehiclePINVOKE.new_ChVector2i__SWIG_2(a), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVector2i(ChVector2i other) : this(chrono_vehiclePINVOKE.new_ChVector2i__SWIG_3(ChVector2i.getCPtr(other)), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_int data() {
    global::System.IntPtr cPtr = chrono_vehiclePINVOKE.ChVector2i_data(swigCPtr);
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Set(int x, int y) {
    chrono_vehiclePINVOKE.ChVector2i_Set__SWIG_0(swigCPtr, x, y);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Set(ChVector2i v) {
    chrono_vehiclePINVOKE.ChVector2i_Set__SWIG_1(swigCPtr, ChVector2i.getCPtr(v));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Set(int s) {
    chrono_vehiclePINVOKE.ChVector2i_Set__SWIG_2(swigCPtr, s);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetNull() {
    chrono_vehiclePINVOKE.ChVector2i_SetNull(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsNull() {
    bool ret = chrono_vehiclePINVOKE.ChVector2i_IsNull(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equals(ChVector2i other) {
    bool ret = chrono_vehiclePINVOKE.ChVector2i_Equals__SWIG_0(swigCPtr, ChVector2i.getCPtr(other));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equals(ChVector2i other, int tol) {
    bool ret = chrono_vehiclePINVOKE.ChVector2i_Equals__SWIG_1(swigCPtr, ChVector2i.getCPtr(other), tol);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Length() {
    int ret = chrono_vehiclePINVOKE.ChVector2i_Length(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Length2() {
    int ret = chrono_vehiclePINVOKE.ChVector2i_Length2(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int LengthInf() {
    int ret = chrono_vehiclePINVOKE.ChVector2i_LengthInf(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Add(ChVector2i A, ChVector2i B) {
    chrono_vehiclePINVOKE.ChVector2i_Add(swigCPtr, ChVector2i.getCPtr(A), ChVector2i.getCPtr(B));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Sub(ChVector2i A, ChVector2i B) {
    chrono_vehiclePINVOKE.ChVector2i_Sub(swigCPtr, ChVector2i.getCPtr(A), ChVector2i.getCPtr(B));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Mul(ChVector2i A, int s) {
    chrono_vehiclePINVOKE.ChVector2i_Mul(swigCPtr, ChVector2i.getCPtr(A), s);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Scale(int s) {
    chrono_vehiclePINVOKE.ChVector2i_Scale(swigCPtr, s);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public int Dot(ChVector2i B) {
    int ret = chrono_vehiclePINVOKE.ChVector2i_Dot(swigCPtr, ChVector2i.getCPtr(B));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Normalize() {
    bool ret = chrono_vehiclePINVOKE.ChVector2i_Normalize(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector2i GetNormalized() {
    ChVector2i ret = new ChVector2i(chrono_vehiclePINVOKE.ChVector2i_GetNormalized(swigCPtr), true);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetLength(int s) {
    chrono_vehiclePINVOKE.ChVector2i_SetLength(swigCPtr, s);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Rotate(int angle) {
    chrono_vehiclePINVOKE.ChVector2i_Rotate(swigCPtr, angle);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetMaxComponent() {
    int ret = chrono_vehiclePINVOKE.ChVector2i_GetMaxComponent(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector2i GetOrthogonalVector() {
    ChVector2i ret = new ChVector2i(chrono_vehiclePINVOKE.ChVector2i_GetOrthogonalVector(swigCPtr), true);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ArchiveOut(SWIGTYPE_p_chrono__ChArchiveOut archive_out) {
    chrono_vehiclePINVOKE.ChVector2i_ArchiveOut(swigCPtr, SWIGTYPE_p_chrono__ChArchiveOut.getCPtr(archive_out));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void ArchiveIn(SWIGTYPE_p_chrono__ChArchiveIn archive_in) {
    chrono_vehiclePINVOKE.ChVector2i_ArchiveIn(swigCPtr, SWIGTYPE_p_chrono__ChArchiveIn.getCPtr(archive_in));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public int x {
    set {
      chrono_vehiclePINVOKE.ChVector2i_x_set(swigCPtr, value);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = chrono_vehiclePINVOKE.ChVector2i_x_get(swigCPtr);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int y {
    set {
      chrono_vehiclePINVOKE.ChVector2i_y_set(swigCPtr, value);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = chrono_vehiclePINVOKE.ChVector2i_y_get(swigCPtr);
      if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
