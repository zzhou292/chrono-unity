//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class M113_TrackAssemblyDoublePin : ChTrackAssemblyDoublePin {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal M113_TrackAssemblyDoublePin(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chrono_vehiclePINVOKE.M113_TrackAssemblyDoublePin_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(M113_TrackAssemblyDoublePin obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chrono_vehiclePINVOKE.delete_M113_TrackAssemblyDoublePin(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public M113_TrackAssemblyDoublePin(VehicleSide side, DoublePinTrackShoeType topology, BrakeType brake_type, bool use_track_bushings, bool use_suspension_bushings, bool use_track_RSDA) : this(chrono_vehiclePINVOKE.new_M113_TrackAssemblyDoublePin((int)side, (int)topology, (int)brake_type, use_track_bushings, use_suspension_bushings, use_track_RSDA), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChVector3d GetSprocketLocation() {
    ChVector3d ret = new ChVector3d(chrono_vehiclePINVOKE.M113_TrackAssemblyDoublePin_GetSprocketLocation(swigCPtr), true);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override ChVector3d GetIdlerLocation() {
    ChVector3d ret = new ChVector3d(chrono_vehiclePINVOKE.M113_TrackAssemblyDoublePin_GetIdlerLocation(swigCPtr), true);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override ChVector3d GetRoadWhelAssemblyLocation(int which) {
    ChVector3d ret = new ChVector3d(chrono_vehiclePINVOKE.M113_TrackAssemblyDoublePin_GetRoadWhelAssemblyLocation(swigCPtr, which), true);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
