//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChRandomParticlePositionRectangleOutlet : ChRandomParticlePosition {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChRandomParticlePositionRectangleOutlet(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChRandomParticlePositionRectangleOutlet_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChRandomParticlePositionRectangleOutlet obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChRandomParticlePositionRectangleOutlet(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChRandomParticlePositionRectangleOutlet() : this(chronoPINVOKE.new_ChRandomParticlePositionRectangleOutlet(), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChVector3d RandomPosition() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChRandomParticlePositionRectangleOutlet_RandomPosition(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChCoordsysd Outlet() {
    ChCoordsysd ret = new ChCoordsysd(chronoPINVOKE.ChRandomParticlePositionRectangleOutlet_Outlet(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_double OutletWidth() {
    SWIGTYPE_p_double ret = new SWIGTYPE_p_double(chronoPINVOKE.ChRandomParticlePositionRectangleOutlet_OutletWidth(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_double OutletHeight() {
    SWIGTYPE_p_double ret = new SWIGTYPE_p_double(chronoPINVOKE.ChRandomParticlePositionRectangleOutlet_OutletHeight(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
