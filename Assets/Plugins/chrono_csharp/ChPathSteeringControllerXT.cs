//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChPathSteeringControllerXT : ChSteeringController {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ChPathSteeringControllerXT(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chrono_vehiclePINVOKE.ChPathSteeringControllerXT_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChPathSteeringControllerXT obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          chrono_vehiclePINVOKE.delete_ChPathSteeringControllerXT(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChPathSteeringControllerXT(ChBezierCurve path, double max_wheel_turn_angle) : this(chrono_vehiclePINVOKE.new_ChPathSteeringControllerXT__SWIG_0(ChBezierCurve.getCPtr(path), max_wheel_turn_angle), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathSteeringControllerXT(ChBezierCurve path) : this(chrono_vehiclePINVOKE.new_ChPathSteeringControllerXT__SWIG_1(ChBezierCurve.getCPtr(path)), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathSteeringControllerXT(string filename, ChBezierCurve path, double max_wheel_turn_angle) : this(chrono_vehiclePINVOKE.new_ChPathSteeringControllerXT__SWIG_2(filename, ChBezierCurve.getCPtr(path), max_wheel_turn_angle), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathSteeringControllerXT(string filename, ChBezierCurve path) : this(chrono_vehiclePINVOKE.new_ChPathSteeringControllerXT__SWIG_3(filename, ChBezierCurve.getCPtr(path)), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Reset(ChFrameMovingd ref_frame) {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_Reset(swigCPtr, ChFrameMovingd.getCPtr(ref_frame));
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGains(double Kp, double W_y_err, double W_heading_err, double W_ackermann) {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_SetGains__SWIG_0(swigCPtr, Kp, W_y_err, W_heading_err, W_ackermann);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGains(double Kp, double W_y_err, double W_heading_err) {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_SetGains__SWIG_1(swigCPtr, Kp, W_y_err, W_heading_err);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGains(double Kp, double W_y_err) {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_SetGains__SWIG_2(swigCPtr, Kp, W_y_err);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGains(double Kp) {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_SetGains__SWIG_3(swigCPtr, Kp);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGains() {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_SetGains__SWIG_4(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void CalcTargetLocation() {
    chrono_vehiclePINVOKE.ChPathSteeringControllerXT_CalcTargetLocation(swigCPtr);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public override double Advance(ChFrameMovingd ref_frame, double time, double step) {
    double ret = chrono_vehiclePINVOKE.ChPathSteeringControllerXT_Advance(swigCPtr, ChFrameMovingd.getCPtr(ref_frame), time, step);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
