//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChContactable1vars6 : ChContactable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChContactable1vars6(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChContactable1vars6_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChContactable1vars6 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChContactable1vars6(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public virtual void ComputeJacobianForContactPart(ChVector3d abs_point, ChMatrix33d contact_plane, SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple jacobian_tuple_N, SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple jacobian_tuple_U, SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple jacobian_tuple_V, bool second) {
    chronoPINVOKE.ChContactable1vars6_ComputeJacobianForContactPart(swigCPtr, ChVector3d.getCPtr(abs_point), ChMatrix33d.getCPtr(contact_plane), SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple.getCPtr(jacobian_tuple_N), SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple.getCPtr(jacobian_tuple_U), SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple.getCPtr(jacobian_tuple_V), second);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void ComputeJacobianForRollingContactPart(ChVector3d abs_point, ChMatrix33d contact_plane, SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple jacobian_tuple_N, SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple jacobian_tuple_U, SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple jacobian_tuple_V, bool second) {
    chronoPINVOKE.ChContactable1vars6_ComputeJacobianForRollingContactPart(swigCPtr, ChVector3d.getCPtr(abs_point), ChMatrix33d.getCPtr(contact_plane), SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple.getCPtr(jacobian_tuple_N), SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple.getCPtr(jacobian_tuple_U), SWIGTYPE_p_ChVariableTupleCarrier_1varsT_6_t__type_constraint_tuple.getCPtr(jacobian_tuple_V), second);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

}
