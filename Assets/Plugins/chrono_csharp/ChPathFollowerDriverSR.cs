//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChPathFollowerDriverSR : ChClosedLoopDriver {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChPathFollowerDriverSR(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chrono_vehiclePINVOKE.ChPathFollowerDriverSR_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChPathFollowerDriverSR obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chrono_vehiclePINVOKE.delete_ChPathFollowerDriverSR(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle, double axle_space, double zero_duration, double ramp_duration) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_0(ChVehicle.getCPtr(vehicle), ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle, axle_space, zero_duration, ramp_duration), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle, double axle_space, double zero_duration) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_1(ChVehicle.getCPtr(vehicle), ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle, axle_space, zero_duration), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle, double axle_space) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_2(ChVehicle.getCPtr(vehicle), ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle, axle_space), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_3(ChVehicle.getCPtr(vehicle), ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, ChBezierCurve path, string path_name, double target_speed) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_4(ChVehicle.getCPtr(vehicle), ChBezierCurve.getCPtr(path), path_name, target_speed), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, string steering_filename, string speed_filename, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle, double axle_space, double zero_duration, double ramp_duration) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_5(ChVehicle.getCPtr(vehicle), steering_filename, speed_filename, ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle, axle_space, zero_duration, ramp_duration), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, string steering_filename, string speed_filename, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle, double axle_space, double zero_duration) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_6(ChVehicle.getCPtr(vehicle), steering_filename, speed_filename, ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle, axle_space, zero_duration), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, string steering_filename, string speed_filename, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle, double axle_space) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_7(ChVehicle.getCPtr(vehicle), steering_filename, speed_filename, ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle, axle_space), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, string steering_filename, string speed_filename, ChBezierCurve path, string path_name, double target_speed, double maxWheelTurnAngle) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_8(ChVehicle.getCPtr(vehicle), steering_filename, speed_filename, ChBezierCurve.getCPtr(path), path_name, target_speed, maxWheelTurnAngle), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathFollowerDriverSR(ChVehicle vehicle, string steering_filename, string speed_filename, ChBezierCurve path, string path_name, double target_speed) : this(chrono_vehiclePINVOKE.new_ChPathFollowerDriverSR__SWIG_9(ChVehicle.getCPtr(vehicle), steering_filename, speed_filename, ChBezierCurve.getCPtr(path), path_name, target_speed), true) {
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChPathSteeringControllerSR GetSteeringController() {
    ChPathSteeringControllerSR ret = new ChPathSteeringControllerSR(chrono_vehiclePINVOKE.ChPathFollowerDriverSR_GetSteeringController(swigCPtr), false);
    if (chrono_vehiclePINVOKE.SWIGPendingException.Pending) throw chrono_vehiclePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
