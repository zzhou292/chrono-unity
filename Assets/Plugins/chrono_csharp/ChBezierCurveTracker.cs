//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChBezierCurveTracker : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ChBezierCurveTracker(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChBezierCurveTracker obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ChBezierCurveTracker() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          chronoPINVOKE.delete_ChBezierCurveTracker(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public ChBezierCurveTracker(ChBezierCurve path) : this(chronoPINVOKE.new_ChBezierCurveTracker(ChBezierCurve.getCPtr(path)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Reset(ChVector3d loc) {
    chronoPINVOKE.ChBezierCurveTracker_Reset(swigCPtr, ChVector3d.getCPtr(loc));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public int CalcClosestPoint(ChVector3d loc, ChVector3d point) {
    int ret = chronoPINVOKE.ChBezierCurveTracker_CalcClosestPoint__SWIG_0(swigCPtr, ChVector3d.getCPtr(loc), ChVector3d.getCPtr(point));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int CalcClosestPoint(ChVector3d loc, SWIGTYPE_p_ChFrameT_t tnb, SWIGTYPE_p_double curvature) {
    int ret = chronoPINVOKE.ChBezierCurveTracker_CalcClosestPoint__SWIG_1(swigCPtr, ChVector3d.getCPtr(loc), SWIGTYPE_p_ChFrameT_t.getCPtr(tnb), SWIGTYPE_p_double.getCPtr(curvature));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
