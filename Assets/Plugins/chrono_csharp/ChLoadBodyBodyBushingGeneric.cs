//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChLoadBodyBodyBushingGeneric : ChLoadBodyBody {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChLoadBodyBodyBushingGeneric(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChLoadBodyBodyBushingGeneric_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChLoadBodyBodyBushingGeneric obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChLoadBodyBodyBushingGeneric(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChLoadBodyBodyBushingGeneric(ChBody bodyA, ChBody bodyB, ChFramed abs_application, ChMatrix66d stiffness66, ChMatrix66d damping66) : this(chronoPINVOKE.new_ChLoadBodyBodyBushingGeneric(ChBody.getCPtr(bodyA), ChBody.getCPtr(bodyB), ChFramed.getCPtr(abs_application), ChMatrix66d.getCPtr(stiffness66), ChMatrix66d.getCPtr(damping66)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetStiffnessMatrix(ChMatrix66d mstiffness) {
    chronoPINVOKE.ChLoadBodyBodyBushingGeneric_SetStiffnessMatrix(swigCPtr, ChMatrix66d.getCPtr(mstiffness));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChMatrix66d GetStiffnessMatrix() {
    ChMatrix66d ret = new ChMatrix66d(chronoPINVOKE.ChLoadBodyBodyBushingGeneric_GetStiffnessMatrix(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetDampingMatrix(ChMatrix66d mdamping) {
    chronoPINVOKE.ChLoadBodyBodyBushingGeneric_SetDampingMatrix(swigCPtr, ChMatrix66d.getCPtr(mdamping));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChMatrix66d GetDampingMatrix() {
    ChMatrix66d ret = new ChMatrix66d(chronoPINVOKE.ChLoadBodyBodyBushingGeneric_GetDampingMatrix(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetNeutralForce(ChVector3d mf) {
    chronoPINVOKE.ChLoadBodyBodyBushingGeneric_SetNeutralForce(swigCPtr, ChVector3d.getCPtr(mf));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVector3d GetNeutralForce() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChLoadBodyBodyBushingGeneric_GetNeutralForce(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetNeutralTorque(ChVector3d mt) {
    chronoPINVOKE.ChLoadBodyBodyBushingGeneric_SetNeutralTorque(swigCPtr, ChVector3d.getCPtr(mt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVector3d GetNeutralTorque() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChLoadBodyBodyBushingGeneric_GetNeutralTorque(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChFramed NeutralDisplacement() {
    ChFramed ret = new ChFramed(chronoPINVOKE.ChLoadBodyBodyBushingGeneric_NeutralDisplacement(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
