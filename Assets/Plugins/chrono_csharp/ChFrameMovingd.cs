//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChFrameMovingd : ChFramed {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChFrameMovingd(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChFrameMovingd_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChFrameMovingd obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChFrameMovingd(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChFrameMovingd() : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_0(), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameMovingd(ChVector3d v, ChQuaterniond q) : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_1(ChVector3d.getCPtr(v), ChQuaterniond.getCPtr(q)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameMovingd(ChVector3d v) : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_2(ChVector3d.getCPtr(v)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameMovingd(ChVector3d v, ChMatrix33d R) : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_3(ChVector3d.getCPtr(v), ChMatrix33d.getCPtr(R)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameMovingd(ChCoordsysd C) : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_4(ChCoordsysd.getCPtr(C)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameMovingd(ChFramed F) : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_5(ChFramed.getCPtr(F)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameMovingd(ChFrameMovingd other) : this(chronoPINVOKE.new_ChFrameMovingd__SWIG_6(ChFrameMovingd.getCPtr(other)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChCoordsysd GetCoordsysDt() {
    ChCoordsysd ret = new ChCoordsysd(chronoPINVOKE.ChFrameMovingd_GetCoordsysDt(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChCoordsysd GetCoordsysDt2() {
    ChCoordsysd ret = new ChCoordsysd(chronoPINVOKE.ChFrameMovingd_GetCoordsysDt2(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetPosDt() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetPosDt(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetLinVel() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetLinVel(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetPosDt2() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetPosDt2(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetLinAcc() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetLinAcc(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChQuaterniond GetRotDt() {
    ChQuaterniond ret = new ChQuaterniond(chronoPINVOKE.ChFrameMovingd_GetRotDt(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChQuaterniond GetRotDt2() {
    ChQuaterniond ret = new ChQuaterniond(chronoPINVOKE.ChFrameMovingd_GetRotDt2(swigCPtr), false);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetAngVelLocal() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetAngVelLocal(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetAngVelParent() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetAngVelParent(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetAngAccLocal() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetAngAccLocal(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d GetAngAccParent() {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_GetAngAccParent(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void SetCoordsysDt(ChCoordsysd csys_dt) {
    chronoPINVOKE.ChFrameMovingd_SetCoordsysDt(swigCPtr, ChCoordsysd.getCPtr(csys_dt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetPosDt(ChVector3d vel) {
    chronoPINVOKE.ChFrameMovingd_SetPosDt(swigCPtr, ChVector3d.getCPtr(vel));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetLinVel(ChVector3d vel) {
    chronoPINVOKE.ChFrameMovingd_SetLinVel(swigCPtr, ChVector3d.getCPtr(vel));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetRotDt(ChQuaterniond q_dt) {
    chronoPINVOKE.ChFrameMovingd_SetRotDt(swigCPtr, ChQuaterniond.getCPtr(q_dt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetAngVelLocal(ChVector3d w) {
    chronoPINVOKE.ChFrameMovingd_SetAngVelLocal(swigCPtr, ChVector3d.getCPtr(w));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetAngVelParent(ChVector3d w) {
    chronoPINVOKE.ChFrameMovingd_SetAngVelParent(swigCPtr, ChVector3d.getCPtr(w));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetCoordsysDt2(ChCoordsysd csys_dtdt) {
    chronoPINVOKE.ChFrameMovingd_SetCoordsysDt2(swigCPtr, ChCoordsysd.getCPtr(csys_dtdt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetPosDt2(ChVector3d acc) {
    chronoPINVOKE.ChFrameMovingd_SetPosDt2(swigCPtr, ChVector3d.getCPtr(acc));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetLinAcc(ChVector3d acc) {
    chronoPINVOKE.ChFrameMovingd_SetLinAcc(swigCPtr, ChVector3d.getCPtr(acc));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetRotDt2(ChQuaterniond q_dtdt) {
    chronoPINVOKE.ChFrameMovingd_SetRotDt2(swigCPtr, ChQuaterniond.getCPtr(q_dtdt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetAngAccLocal(ChVector3d a) {
    chronoPINVOKE.ChFrameMovingd_SetAngAccLocal(swigCPtr, ChVector3d.getCPtr(a));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void SetAngAccParent(ChVector3d a) {
    chronoPINVOKE.ChFrameMovingd_SetAngAccParent(swigCPtr, ChVector3d.getCPtr(a));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ComputeRotMatDt(ChMatrix33d R_dt) {
    chronoPINVOKE.ChFrameMovingd_ComputeRotMatDt(swigCPtr, ChMatrix33d.getCPtr(R_dt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ComputeRotMatDt2(ChMatrix33d R_dtdt) {
    chronoPINVOKE.ChFrameMovingd_ComputeRotMatDt2(swigCPtr, ChMatrix33d.getCPtr(R_dtdt));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChMatrix33d GetRotMatDt() {
    ChMatrix33d ret = new ChMatrix33d(chronoPINVOKE.ChFrameMovingd_GetRotMatDt(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChMatrix33d GetRotMatDt2() {
    ChMatrix33d ret = new ChMatrix33d(chronoPINVOKE.ChFrameMovingd_GetRotMatDt2(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ConcatenatePreTransformation(ChFrameMovingd F) {
    chronoPINVOKE.ChFrameMovingd_ConcatenatePreTransformation(swigCPtr, ChFrameMovingd.getCPtr(F));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ConcatenatePostTransformation(ChFrameMovingd F) {
    chronoPINVOKE.ChFrameMovingd_ConcatenatePostTransformation(swigCPtr, ChFrameMovingd.getCPtr(F));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVector3d PointSpeedLocalToParent(ChVector3d localpos) {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_PointSpeedLocalToParent__SWIG_0(swigCPtr, ChVector3d.getCPtr(localpos)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d PointSpeedLocalToParent(ChVector3d localpos, ChVector3d localspeed) {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_PointSpeedLocalToParent__SWIG_1(swigCPtr, ChVector3d.getCPtr(localpos), ChVector3d.getCPtr(localspeed)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d PointAccelerationLocalToParent(ChVector3d localpos) {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_PointAccelerationLocalToParent__SWIG_0(swigCPtr, ChVector3d.getCPtr(localpos)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d PointAccelerationLocalToParent(ChVector3d localpos, ChVector3d localspeed, ChVector3d localacc) {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_PointAccelerationLocalToParent__SWIG_1(swigCPtr, ChVector3d.getCPtr(localpos), ChVector3d.getCPtr(localspeed), ChVector3d.getCPtr(localacc)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d PointSpeedParentToLocal(ChVector3d parentpos, ChVector3d parentspeed) {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_PointSpeedParentToLocal(swigCPtr, ChVector3d.getCPtr(parentpos), ChVector3d.getCPtr(parentspeed)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChVector3d PointAccelerationParentToLocal(ChVector3d parentpos, ChVector3d parentspeed, ChVector3d parentacc) {
    ChVector3d ret = new ChVector3d(chronoPINVOKE.ChFrameMovingd_PointAccelerationParentToLocal(swigCPtr, ChVector3d.getCPtr(parentpos), ChVector3d.getCPtr(parentspeed), ChVector3d.getCPtr(parentacc)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChFrameMovingd TransformLocalToParent(ChFrameMovingd F) {
    ChFrameMovingd ret = new ChFrameMovingd(chronoPINVOKE.ChFrameMovingd_TransformLocalToParent(swigCPtr, ChFrameMovingd.getCPtr(F)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChFrameMovingd TransformParentToLocal(ChFrameMovingd F) {
    ChFrameMovingd ret = new ChFrameMovingd(chronoPINVOKE.ChFrameMovingd_TransformParentToLocal(swigCPtr, ChFrameMovingd.getCPtr(F)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equals(ChFrameMovingd other) {
    bool ret = chronoPINVOKE.ChFrameMovingd_Equals__SWIG_0(swigCPtr, ChFrameMovingd.getCPtr(other));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Equals(ChFrameMovingd other, double tol) {
    bool ret = chronoPINVOKE.ChFrameMovingd_Equals__SWIG_1(swigCPtr, ChFrameMovingd.getCPtr(other), tol);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void Invert() {
    chronoPINVOKE.ChFrameMovingd_Invert(swigCPtr);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public new ChFrameMovingd GetInverse() {
    ChFrameMovingd ret = new ChFrameMovingd(chronoPINVOKE.ChFrameMovingd_GetInverse(swigCPtr), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void ArchiveOut(SWIGTYPE_p_chrono__ChArchiveOut archive_out) {
    chronoPINVOKE.ChFrameMovingd_ArchiveOut(swigCPtr, SWIGTYPE_p_chrono__ChArchiveOut.getCPtr(archive_out));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveIn(SWIGTYPE_p_chrono__ChArchiveIn archive_in) {
    chronoPINVOKE.ChFrameMovingd_ArchiveIn(swigCPtr, SWIGTYPE_p_chrono__ChArchiveIn.getCPtr(archive_in));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

}
