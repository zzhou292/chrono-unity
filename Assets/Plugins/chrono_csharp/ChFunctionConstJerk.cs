//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChFunctionConstJerk : ChFunction {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChFunctionConstJerk(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChFunctionConstJerk_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChFunctionConstJerk obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChFunctionConstJerk(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChFunctionConstJerk() : this(chronoPINVOKE.new_ChFunctionConstJerk__SWIG_0(), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFunctionConstJerk(double q0, double q1, double v0, double v1, double T, double Ta, double Tj) : this(chronoPINVOKE.new_ChFunctionConstJerk__SWIG_1(q0, q1, v0, v1, T, Ta, Tj), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFunctionConstJerk(double q0, double q1, double vmax, double amax, double jmax) : this(chronoPINVOKE.new_ChFunctionConstJerk__SWIG_2(q0, q1, vmax, amax, jmax), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFunctionConstJerk(SWIGTYPE_p_bool feasible, double q0, double q1, double v0, double v1, double vmax, double amax, double jmax) : this(chronoPINVOKE.new_ChFunctionConstJerk__SWIG_3(SWIGTYPE_p_bool.getCPtr(feasible), q0, q1, v0, v1, vmax, amax, jmax), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFunctionConstJerk(ChFunctionConstJerk other) : this(chronoPINVOKE.new_ChFunctionConstJerk__SWIG_4(ChFunctionConstJerk.getCPtr(other)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChFunction.Type GetFunctionType() {
    ChFunction.Type ret = (ChFunction.Type)chronoPINVOKE.ChFunctionConstJerk_GetFunctionType(swigCPtr);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Setup(double q0, double q1, double v0, double v1, double T, double Ta, double Tj) {
    chronoPINVOKE.ChFunctionConstJerk_Setup__SWIG_0(swigCPtr, q0, q1, v0, v1, T, Ta, Tj);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Setup(double q0, double q1, double vmax, double amax, double jmax) {
    chronoPINVOKE.ChFunctionConstJerk_Setup__SWIG_1(swigCPtr, q0, q1, vmax, amax, jmax);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Setup(SWIGTYPE_p_bool feasible, double q0, double q1, double v0, double v1, double vmax, double amax, double jmax) {
    chronoPINVOKE.ChFunctionConstJerk_Setup__SWIG_2(swigCPtr, SWIGTYPE_p_bool.getCPtr(feasible), q0, q1, v0, v1, vmax, amax, jmax);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override double GetVal(double x) {
    double ret = chronoPINVOKE.ChFunctionConstJerk_GetVal(swigCPtr, x);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override double GetDer(double x) {
    double ret = chronoPINVOKE.ChFunctionConstJerk_GetDer(swigCPtr, x);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override double GetDer2(double x) {
    double ret = chronoPINVOKE.ChFunctionConstJerk_GetDer2(swigCPtr, x);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override double GetDer3(double x) {
    double ret = chronoPINVOKE.ChFunctionConstJerk_GetDer3(swigCPtr, x);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double GetDisplacement() {
    double ret = chronoPINVOKE.ChFunctionConstJerk_GetDisplacement(swigCPtr);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double GetDuration() {
    double ret = chronoPINVOKE.ChFunctionConstJerk_GetDuration(swigCPtr);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void GetBoundaryConditions(SWIGTYPE_p_double q0, SWIGTYPE_p_double q1, SWIGTYPE_p_double v0, SWIGTYPE_p_double v1) {
    chronoPINVOKE.ChFunctionConstJerk_GetBoundaryConditions(swigCPtr, SWIGTYPE_p_double.getCPtr(q0), SWIGTYPE_p_double.getCPtr(q1), SWIGTYPE_p_double.getCPtr(v0), SWIGTYPE_p_double.getCPtr(v1));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetImposedLimits(SWIGTYPE_p_double vmax, SWIGTYPE_p_double amax, SWIGTYPE_p_double jmax) {
    chronoPINVOKE.ChFunctionConstJerk_GetImposedLimits(swigCPtr, SWIGTYPE_p_double.getCPtr(vmax), SWIGTYPE_p_double.getCPtr(amax), SWIGTYPE_p_double.getCPtr(jmax));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetTimes(SWIGTYPE_p_double T, SWIGTYPE_p_double Ta, SWIGTYPE_p_double Tv, SWIGTYPE_p_double Td, SWIGTYPE_p_double Tj1, SWIGTYPE_p_double Tj2) {
    chronoPINVOKE.ChFunctionConstJerk_GetTimes(swigCPtr, SWIGTYPE_p_double.getCPtr(T), SWIGTYPE_p_double.getCPtr(Ta), SWIGTYPE_p_double.getCPtr(Tv), SWIGTYPE_p_double.getCPtr(Td), SWIGTYPE_p_double.getCPtr(Tj1), SWIGTYPE_p_double.getCPtr(Tj2));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetReachedLimits(SWIGTYPE_p_double vlim, SWIGTYPE_p_double alim_a, SWIGTYPE_p_double alim_d) {
    chronoPINVOKE.ChFunctionConstJerk_GetReachedLimits(swigCPtr, SWIGTYPE_p_double.getCPtr(vlim), SWIGTYPE_p_double.getCPtr(alim_a), SWIGTYPE_p_double.getCPtr(alim_d));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveOut(SWIGTYPE_p_chrono__ChArchiveOut archive_out) {
    chronoPINVOKE.ChFunctionConstJerk_ArchiveOut(swigCPtr, SWIGTYPE_p_chrono__ChArchiveOut.getCPtr(archive_out));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveIn(SWIGTYPE_p_chrono__ChArchiveIn archive_in) {
    chronoPINVOKE.ChFunctionConstJerk_ArchiveIn(swigCPtr, SWIGTYPE_p_chrono__ChArchiveIn.getCPtr(archive_in));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

}
