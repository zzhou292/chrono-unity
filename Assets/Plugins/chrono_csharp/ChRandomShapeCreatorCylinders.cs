//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChRandomShapeCreatorCylinders : ChRandomShapeCreator {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChRandomShapeCreatorCylinders(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChRandomShapeCreatorCylinders_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChRandomShapeCreatorCylinders obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChRandomShapeCreatorCylinders(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChRandomShapeCreatorCylinders() : this(chronoPINVOKE.new_ChRandomShapeCreatorCylinders(), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChBody RandomGenerate(ChCoordsysd mcoords) {
    global::System.IntPtr cPtr = chronoPINVOKE.ChRandomShapeCreatorCylinders_RandomGenerate(swigCPtr, ChCoordsysd.getCPtr(mcoords));
    ChBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new ChBody(cPtr, true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetDiameterDistribution(ChDistribution mdistr) {
    chronoPINVOKE.ChRandomShapeCreatorCylinders_SetDiameterDistribution(swigCPtr, ChDistribution.getCPtr(mdistr));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetLengthFactorDistribution(ChDistribution mdistr) {
    chronoPINVOKE.ChRandomShapeCreatorCylinders_SetLengthFactorDistribution(swigCPtr, ChDistribution.getCPtr(mdistr));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetDensityDistribution(ChDistribution mdistr) {
    chronoPINVOKE.ChRandomShapeCreatorCylinders_SetDensityDistribution(swigCPtr, ChDistribution.getCPtr(mdistr));
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

}
