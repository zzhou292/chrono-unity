//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChContactForceTorqueSMC : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ChContactForceTorqueSMC(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChContactForceTorqueSMC obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ChContactForceTorqueSMC() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          chronoPINVOKE.delete_ChContactForceTorqueSMC(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual ChWrenchd CalculateForceTorque(ChSystemSMC sys, ChVector3d normal_dir, ChVector3d p1, ChVector3d p2, ChVector3d vel1, ChVector3d vel2, ChContactMaterialCompositeSMC mat, double delta, double eff_radius, double mass1, double mass2, ChContactable objA, ChContactable objB) {
    ChWrenchd ret = new ChWrenchd(chronoPINVOKE.ChContactForceTorqueSMC_CalculateForceTorque(swigCPtr, ChSystemSMC.getCPtr(sys), ChVector3d.getCPtr(normal_dir), ChVector3d.getCPtr(p1), ChVector3d.getCPtr(p2), ChVector3d.getCPtr(vel1), ChVector3d.getCPtr(vel2), ChContactMaterialCompositeSMC.getCPtr(mat), delta, eff_radius, mass1, mass2, ChContactable.getCPtr(objA), ChContactable.getCPtr(objB)), true);
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
