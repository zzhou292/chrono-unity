//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChContactMaterialCompositeSMC : ChContactMaterialComposite {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChContactMaterialCompositeSMC(global::System.IntPtr cPtr, bool cMemoryOwn) : base(chronoPINVOKE.ChContactMaterialCompositeSMC_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChContactMaterialCompositeSMC obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          chronoPINVOKE.delete_ChContactMaterialCompositeSMC(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public float E_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_E_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_E_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float G_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_G_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_G_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float mu_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_mu_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_mu_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float muRoll_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_muRoll_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_muRoll_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float muSpin_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_muSpin_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_muSpin_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float cr_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_cr_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_cr_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float adhesion_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_adhesion_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_adhesion_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float adhesionMultDMT_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_adhesionMultDMT_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_adhesionMultDMT_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float adhesionSPerko_eff {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_adhesionSPerko_eff_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_adhesionSPerko_eff_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float kn {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_kn_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_kn_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float kt {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_kt_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_kt_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float gn {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_gn_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_gn_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float gt {
    set {
      chronoPINVOKE.ChContactMaterialCompositeSMC_gt_set(swigCPtr, value);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = chronoPINVOKE.ChContactMaterialCompositeSMC_gt_get(swigCPtr);
      if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ChContactMaterialCompositeSMC() : this(chronoPINVOKE.new_ChContactMaterialCompositeSMC__SWIG_0(), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChContactMaterialCompositeSMC(ChContactMaterialCompositionStrategy strategy, ChContactMaterialSMC mat1, ChContactMaterialSMC mat2) : this(chronoPINVOKE.new_ChContactMaterialCompositeSMC__SWIG_1(ChContactMaterialCompositionStrategy.getCPtr(strategy), ChContactMaterialSMC.getCPtr(mat1), ChContactMaterialSMC.getCPtr(mat2)), true) {
    if (chronoPINVOKE.SWIGPendingException.Pending) throw chronoPINVOKE.SWIGPendingException.Retrieve();
  }

}
